import cors from "cors";
import dotenv from "dotenv";
import express from "express";
import morgan from "morgan";
import { dirname, join } from "path"; // S·ª≠a d√≤ng n√†yimport swaggerUi from "swagger-ui-express";
import { fileURLToPath } from "url";
import YAML from "yamljs";
import { connectDB } from "./config/db.js";
import { errorHandler, notFound } from "./middlewares/error.js";
import apiDocRoute from "./routes/apiDocRoute.js"; // <-- file v·ª´a t·∫°o
import todoRouter from "./routes/todoRoutes.js";


// TH√äM 2 D√íNG N√ÄY ƒê·ªÇ T·∫†O ƒê∆Ø·ªúNG D·∫™N TUY·ªÜT ƒê·ªêI
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const swaggerDocument = YAML.load(join(__dirname, "docs", "swagger.yaml"));

dotenv.config();

const app = express();

app.use(cors({ origin: "*" }));
app.use(express.json());
app.use(morgan("dev"));

app.get("/api/health", (req, res) => {
  res.json({ status: "OK", message: "Server is healthy" });
});

// API ch√≠nh
app.use("/api/todos", todoRouter);

// Xu·∫•t JSON spec (tu·ª≥ ch·ªçn)
app.use("/api-docs.json", apiDocRoute);

// Swagger UI
app.use("/api-docs", swaggerUi.serve, swaggerUi.setup(swaggerDocument));

app.use(notFound);
app.use(errorHandler);

const PORT = process.env.PORT || 4000;

// K·∫øt n·ªëi DB r·ªìi m·ªõi start server (c√≥ catch l·ªói)
connectDB(process.env.MONGODB_URI)
  .then(() => {
    app.listen(PORT, () => console.log(`üöÄ Server running on port ${PORT}`));
    console.log(`üöÄ Server is running on http://localhost:${PORT}`);
    console.log(`üìñ API Documentation available at http://localhost:${PORT}/api-docs`);

  })
  .catch((err) => {
    console.error("‚ùå Failed to connect DB:", err?.message || err);
    process.exit(1);
  });
